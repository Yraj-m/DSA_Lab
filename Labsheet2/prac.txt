struct Node_def
{
    int val;
    struct Node_def* next;
};

typedef struct Node_def Node;

Node* createNode(int x)
{
    Node *newNode = (Node*)malloc(sizeof(Node));
    newNode->val = x;
    newNode->next = NULL;
    return newNode;
}

Node *addToList(Node* head, int x)
{
    Node *myhead = head;
    Node *cur = createNode(x);
    if(myhead==NULL)
        return cur;
    else
    {
        while(myhead->next!=NULL)
        {
            myhead=myhead->next;
        }
        myhead->next = cur;
        return head;
    }
}

Node* readList()
{
    int n;
    scanf("%d",&n);
    Node *head =NULL;
    for(int i=0;i<n;i++)
    {
        int x;
        scanf("%d",&x);
        if(head==NULL)
        {
            head= addToList(head,x);
        }
        else{
            addToList(head,x);
        }
    }
    return head;
}

void printList(Node* head)
{
    Node *cur = head;
    while(cur!=NULL)
    {
        printf("%d->",cur->data);
        cur=cur->next;
    }
}



start=head;
temp=head;
aft=NULL;
while(temp->next!=NULL && temp->next->next!=NULL)
{
    aft= temp->next->next;
    temp->next->next = aft->next;
    temp=temp->next;
    aft->next = start->next;
    start->next = aft;
    start=start->next;
}


country* arr = (country*)malloc(token * sizeof(country));
for(int i=0;i<token;i++)
{
    scanf("%......",arr[i].name,&arr)
}